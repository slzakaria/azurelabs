name: Go CI/CD

on:
  push:
    branches:
    - 'master'
    tags:
    - 'v*.*.*'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.23.0
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60

  build-test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.0'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/go/cache
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Run vet
        run: go vet ./...

      - name: Run tests
        run: go test -v ./...

      - name: Create bin directory
        run: mkdir -p ./bin

      - name: Build
        run: go build -v -o ./bin/goapi ./main.go

  docker-push:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - run: echo "Starting checkout and docker build & tag process by ${{ github.actor }}"
      - run: echo "JOB ID =====> ${{ github.run_id }} from branch ${{ github.ref }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}} | sed 's/[^a-zA-Z0-9]/-/g')" >> $GITHUB_ENV

      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/azurelabs
          tags: |
            type=raw,value=${{ env.BRANCH_NAME }}-{{date 'YYYYMMDDHHmm'}}
            type=raw,value=${{ env.BRANCH_NAME }}-latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-to-aws:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.0'

      - name: Build Go application
        run: go build -o myapp ./main.go

      #- name: Set up SSH key
      #  uses: webfactory/ssh-agent@v0.5.3
      #  with:
      #    ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      #  uses: appleboy/ssh-action@master
      # with:
      #  host: ${{ secrets.EC2_HOST }}
      #    username: ${{ secrets.EC2_USER }}
      #   key: ${{ secrets.SSH_PRIVATE_KEY }}
      #    script: |
      #      cd /path/to/your/project
      #     git pull origin main
      #     go build
      #      sudo systemctl restart your-go-app.service

  deploy-to-digitalocean:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to server
        run: echo "Deploying to server..."
        # - name: Deploy to Digital Ocean droplet
        #   uses: appleboy/ssh-action@master
        #   with:
        #     host: ${{ secrets.HOST }}
        #     username: ${{ secrets.USERNAME }}
        #     key: ${{ secrets.SSH_PRIVATE_KEY }}
        #     script: |
        #       cd /path/to/your/project
        #       git pull origin main
        #       go build
        #       sudo systemctl restart your-go-app.service